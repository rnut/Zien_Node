var util = require("util");
var events = require("events");
var boundary = require("./boundary.js");

function Channel(stream) {
  var _this = this;

  _this.stream = boundary.chunked(stream);

  var state = 0;
  var name;
  var header;
  var body;

  _this.stream.on("message", function(message) {
    switch (state) {
      case 0:
        name = message.toString();
        state = 1;
        break;

      case 1:
        header = JSON.parse(message.toString());
        state = 2;
        break;

      case 2:
        body = message;
        state = 0;

        _this.emit("message", {
          name: name,
          header: header,
          body: body
        });
        break;
    }
  });
}

util.inherits(Channel, events.EventEmitter);

Channel.prototype.sendMessage = function(name, header, body) {
  var _this = this;

  _this.stream.writeMessage(name);
  _this.stream.writeMessage(JSON.stringify(header || {}));
  _this.stream.writeMessage(body || new Buffer(0));
};

module.exports = Channel;
